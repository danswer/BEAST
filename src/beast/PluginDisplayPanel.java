/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beast;

import beast.framework.BeastPlugin;
import beast.framework.Plugin;
import beast.framework.PluginEvent;
import beast.framework.PluginListener;
import beast.framework.PluginManager;
import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Parameter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.border.Border;

/**
 *
 * @author daniel.jones
 */
public class PluginDisplayPanel extends javax.swing.JPanel {

    /**
     * Creates new form PluginDisplayFrame
     */
    private boolean isVisible;
    private String pluginPath;
    private int xComponent;
    private int yComponent;
    private List<JButton> buttonList;
    private BEASTMainFrame parent;

    public boolean isIsVisible() {
        return isVisible;
    }

    public void setIsVisible(boolean isVisible) {
        setVisible(isVisible);
    }

    public PluginDisplayPanel(BEASTMainFrame source) {

        Border innerBorder = BorderFactory.createTitledBorder("Plugin Display");
        Border outerBoard = BorderFactory.createEmptyBorder(5, 5, 5, 5);
        setBorder(BorderFactory.createCompoundBorder(outerBoard, innerBorder));
        setVisible(true);
        setLayout(new GridBagLayout());
        pluginPath = PluginManager.GetPluginDir();
        xComponent = 0;
        yComponent = 0;
        buttonList = new ArrayList<JButton>();
        parent = source;

    }

    public int getxComponent() {
        return xComponent;
    }

    public int getyComponent() {
        return yComponent;
    }

    public void createInitialPluginButtons() {
        PluginManager.BuildInstalledPlugins();
        List<Plugin> installedPlugInList = PluginManager.GetInstalledPlugins();


        GridLayout experimentLayout = new GridLayout(0, 2);
        System.out.println("this is component size" + this.getComponentCount());
        if ( this.getComponentCount() > 0 ) {
            this.removeAll();
        }
        this.setLayout(experimentLayout);

        for (Plugin installPlugin : installedPlugInList) {
            // if ("Recipes.jar".equals(installPlugin)) {
            System.out.print(pluginPath + installPlugin);
            JButton pluginButton = new JButton();

            pluginButton.setIcon(installPlugin.getIcon());
            pluginButton.setText(installPlugin.getDescription());
            pluginButton.setToolTipText("Version: " + installPlugin.getVersion() + "Runs Windows: " + installPlugin.RUNS_ON_WINDOWS);
            addButtonList(pluginButton);
            this.add(pluginButton);
        }
        setButtonListeners();
        parent.validate();
    }

    public void addButtonList(JButton button) {
        buttonList.add(button);
    }

    public List<JButton> getButtonList() {
        return buttonList;
    }

    public void setButtonListeners() {
        Iterator<JButton> iterator = getButtonList().iterator();
        while (iterator.hasNext()) {
            iterator.next().addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent ae) {

                    Object testPlugin = PluginManager.InitPlugIn(PluginManager.GetPluginDir() + ae.getActionCommand() + ".jar");                    
                    parent.getJdesk().add((Component) testPlugin);
                }
            });
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
